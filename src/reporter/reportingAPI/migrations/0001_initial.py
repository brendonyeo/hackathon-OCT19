# Generated by Django 2.2.1 on 2019-09-28 05:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArInternalMetadata',
            fields=[
                ('key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ar_internal_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('categoryname', models.CharField(blank=True, db_column='categoryName', max_length=64, null=True)),
                ('createdtime', models.DateTimeField(blank=True, db_column='createdTime', null=True)),
                ('updatedtime', models.DateTimeField(blank=True, db_column='updatedTime', null=True)),
            ],
            options={
                'db_table': 'Category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('eventname', models.CharField(blank=True, db_column='eventName', max_length=255, null=True)),
                ('startdatetime', models.DateTimeField(blank=True, db_column='startDateTime', null=True)),
                ('enddatetime', models.DateTimeField(blank=True, db_column='endDateTime', null=True)),
                ('maxparticipants', models.IntegerField(blank=True, db_column='maxParticipants', null=True)),
                ('minparticipants', models.IntegerField(blank=True, db_column='minParticipants', null=True)),
                ('organizername', models.CharField(blank=True, db_column='organizerName', max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('eventstatus', models.CharField(blank=True, db_column='eventStatus', max_length=6, null=True)),
                ('createddatetime', models.DateTimeField(blank=True, db_column='createdDateTime', null=True)),
                ('updateddatetime', models.DateTimeField(blank=True, db_column='updatedDateTime', null=True)),
            ],
            options={
                'db_table': 'Event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('version', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'schema_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('accounttype', models.CharField(blank=True, db_column='accountType', max_length=10, null=True)),
                ('emailaddress', models.CharField(blank=True, db_column='emailAddress', max_length=255, null=True, unique=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('dateofbirth', models.DateField(blank=True, db_column='dateOfBirth', null=True)),
                ('clientsecret', models.CharField(blank=True, db_column='clientSecret', max_length=255, null=True)),
                ('twofactorenabled', models.IntegerField(blank=True, db_column='twoFactorEnabled', null=True)),
                ('verified', models.IntegerField(blank=True, null=True)),
                ('createddatetime', models.DateTimeField(blank=True, db_column='createdDateTime', null=True)),
                ('updateddatetime', models.DateTimeField(blank=True, db_column='updatedDateTime', null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventcategory',
            fields=[
                ('categoryid', models.ForeignKey(db_column='categoryId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reportingAPI.Category')),
            ],
            options={
                'db_table': 'EventCategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventregistration',
            fields=[
                ('userid', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reportingAPI.User')),
                ('attended', models.IntegerField(blank=True, null=True)),
                ('createdtime', models.DateTimeField(blank=True, db_column='createdTime', null=True)),
                ('updatedtime', models.DateTimeField(blank=True, db_column='updatedTime', null=True)),
                ('withdrawed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'EventRegistration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('userid', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='reportingAPI.User')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('sentimeterscore', models.FloatField(blank=True, db_column='sentimeterScore', null=True)),
                ('magnitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': False,
            },
        ),
    ]
